name: 'Reusable Build Docker Image And Push To ECR'

#todo run this workflow on push to master and/ordev branch

defaults:
  run:
    shell: bash

jobs:
  build-and-push-docker:
    name: Build Docker Image And Push To ECR
    runs-on: ubuntu-latest
    outputs:
        #todo set environment variable called "env" to be used in other tasks
        #the env can either be dev or prod depending with branch
      BUILD_TAG: ${{ steps.set_output.outputs.BUILD_TAG }}
      ECR_REPOSITORY: ${{ steps.set_output.outputs.ECR_REPOSITORY }}
      
    steps: 
      - name: Set environment variables
        run: |
          echo "BUILD_TAG=B${{ github.run_number }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=python-app-repo-$env" >> $GITHUB_ENV
      
      - id: set_output
        name: Set Output variables
        run: |         
          echo "BUILD_TAG=$BUILD_TAG" >> "$GITHUB_OUTPUT"  
          echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> "$GITHUB_OUTPUT"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          IMAGE_TAG: latest
        run: |
          docker build \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_TAG \
            .          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_TAG
  